# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and push dev

on:
  workflow_dispatch:
    
  push:
    branches:
      - "main"
permissions:
  id-token: write

jobs:
  build:
    environment:
      "dev"
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      docker-tag: ${{ steps.set-version.outputs.docker-tag }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    - name: set maven version
      id: set-version
      run : |
        echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) > version
        new_version=$(cut -d- -f 1 version)
        mvn versions:set -DnewVersion=$new_version -DgenerateBackupPoms=false --batch-mode
        echo "docker-tag=$(echo $new_version)" >> $GITHUB_OUTPUT

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run tests with Maven
      run: mvn -B test --file pom.xml

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: login to docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: docker/Dockerfile
        push: true
        tags: jorikvl/cloud-devops-example:${{ steps.set-version.outputs.docker-tag }}

  deploy:
    needs: build
    runs-on: 
      ubuntu-latest
    environment: "dev"
    steps:
      - name: login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build and deploy Container App
        uses: azure/cli@v2
        env:
          docker_tag: ${{ needs.build.outputs.docker-tag }}
        with:
          azcliversion: latest
          inlineScript: |
            az extension add --name containerapp --upgrade
            echo "${docker_tag}"
            az containerapp update \
              -n dev-app-uat -g rg-dev \
            --image "docker.io/jorikvl/cloud-devops-example:${docker_tag}"
